{"version":3,"sources":["components/Buttons.tsx","components/DisplayTimer.tsx","App.tsx","index.tsx"],"names":["Buttons","props","start","wait","reset","className","type","onClick","DisplayTimer","timer","sec","Math","floor","min","hour","toString","slice","App","useState","setTimer","timerOn","setTimerOn","useEffect","unsubscribe","Subject","interval","pipe","takeUntil","subscribe","val","next","complete","clicks$","fromEvent","document","buffer","throttleTime","filter","clickArray","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"kUAQaA,EAA2B,SAACC,GACvC,IAAQC,EAAuBD,EAAvBC,MAAOC,EAAgBF,EAAhBE,KAAMC,EAAUH,EAAVG,MAErB,OACE,sBAAKC,UAAU,qCAAf,UACE,wBACEA,UAAU,uBACVC,KAAK,SACLC,QAASL,EAHX,mBAOA,wBACEG,UAAU,uBACVC,KAAK,SACLC,QAASJ,EAHX,kBAOA,wBACEE,UAAU,iBACVC,KAAK,SACLC,QAASH,EAHX,uBCrBOI,EAAgC,SAACP,GAC5C,IAAQQ,EAAUR,EAAVQ,MACFC,EAAG,WAAOC,KAAKC,MAAOH,EAAQ,IAAO,KACrCI,EAAG,WAAOF,KAAKC,MAAMH,EAAQ,MAC7BK,EAAI,WAAOH,KAAKC,MAAOH,EAAK,KAAuB,KAEzD,OACE,sBAAKJ,UAAU,mDAAf,UACE,yCAAUS,EAAKC,WAAWC,OAAO,GAAjC,QACA,yCAAUH,EAAIE,WAAWC,OAAO,GAAhC,QACA,+BAAON,EAAIK,WAAWC,OAAO,SCFtBC,EAAgB,WAC3B,MAA0BC,mBAAS,GAAnC,mBAAOT,EAAP,KAAcU,EAAd,KACA,EAA8BD,oBAAS,GAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACR,IAAMC,EAAc,IAAIC,IAUxB,OARAC,YAAS,IACNC,KAAKC,YAAUJ,IACfK,WAAU,WACLR,GACFD,GAAS,SAAAU,GAAG,OAAIA,EAAM,QAIrB,WACLN,EAAYO,KAAK,GACjBP,EAAYQ,cAEb,CAACX,IAsBJ,OACE,qBAAKf,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,yBAAf,UACE,oBAAIA,UAAU,cAAd,mBACA,cAAC,EAAD,CACEI,MAAOA,IAET,cAAC,EAAD,CACEP,MA7BS,WACjBmB,GAAW,IA6BHlB,KA1BQ,WAChB,IAAM6B,EAAUC,YAAUC,SAAU,SAEpCF,EAAQN,KACNS,YAAOH,EAAQN,KAAKU,YAAa,OACjCC,aAAO,SAAAC,GAAU,OAAIA,EAAWC,OAAS,MAGxCX,WAAU,kBAAMP,GAAW,OAmBtBjB,MAhBS,WACjBe,EAAS,GACTE,GAAW,cC/CfmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFR,SAASS,eAAe,W","file":"static/js/main.e69d25f0.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  start: () => void;\n  wait: () => void;\n  reset: () => void;\n}\n\nexport const Buttons: React.FC<Props> = (props) => {\n  const { start, wait, reset } = props;\n\n  return (\n    <div className=\"d-flex justify-content-center mt-4\">\n      <button\n        className=\"btn btn-success mx-3\"\n        type=\"button\"\n        onClick={start}\n      >\n        Start\n      </button>\n      <button\n        className=\"btn btn-primary me-3\"\n        type=\"button\"\n        onClick={wait}\n      >\n        Wait\n      </button>\n      <button\n        className=\"btn btn-danger\"\n        type=\"button\"\n        onClick={reset}\n      >\n        Reset\n      </button>\n    </div>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  timer: number;\n}\n\nexport const DisplayTimer: React.FC<Props> = (props) => {\n  const { timer } = props;\n  const sec = `0${Math.floor((timer / 100) % 60)}`;\n  const min = `0${Math.floor(timer / 6000)}`;\n  const hour = `0${Math.floor((timer / (1000 * 60 * 60)) % 24)}`;\n\n  return (\n    <div className=\"display-timer d-flex justify-content-center fs-2\">\n      <span>{`${hour.toString().slice(-2)}: `}</span>\n      <span>{`${min.toString().slice(-2)}: `}</span>\n      <span>{sec.toString().slice(-2)}</span>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport {\n  buffer,\n  fromEvent,\n  interval,\n  Subject,\n  takeUntil,\n  throttleTime,\n} from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport './App.scss';\nimport { Buttons } from './components/Buttons';\nimport { DisplayTimer } from './components/DisplayTimer';\n\nexport const App: React.FC = () => {\n  const [timer, setTimer] = useState(0);\n  const [timerOn, setTimerOn] = useState(false);\n\n  useEffect(() => {\n    const unsubscribe = new Subject();\n\n    interval(10)\n      .pipe(takeUntil(unsubscribe))\n      .subscribe(() => {\n        if (timerOn) {\n          setTimer(val => val + 1);\n        }\n      });\n\n    return () => {\n      unsubscribe.next(0);\n      unsubscribe.complete();\n    };\n  }, [timerOn]);\n\n  const startTimer = () => {\n    setTimerOn(true);\n  };\n\n  const waitTimer = () => {\n    const clicks$ = fromEvent(document, 'click');\n\n    clicks$.pipe(\n      buffer(clicks$.pipe(throttleTime(300))),\n      filter(clickArray => clickArray.length > 1),\n    )\n\n      .subscribe(() => setTimerOn(false));\n  };\n\n  const resetTimer = () => {\n    setTimer(0);\n    setTimerOn(false);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col d-flex flex-column\">\n          <h1 className=\"text-center\">Timer</h1>\n          <DisplayTimer\n            timer={timer}\n          />\n          <Buttons\n            start={startTimer}\n            wait={waitTimer}\n            reset={resetTimer}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}